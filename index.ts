import { AbstractAccountUpdate as AbstractAccountUpdateModel } from "./src/models/AbstractAccountUpdate";
import { AbstractApplicationUserUpdate as AbstractApplicationUserUpdateModel } from "./src/models/AbstractApplicationUserUpdate";
import { AbstractDebtCollectionCaseUpdate as AbstractDebtCollectionCaseUpdateModel } from "./src/models/AbstractDebtCollectionCaseUpdate";
import { AbstractHumanUserUpdate as AbstractHumanUserUpdateModel } from "./src/models/AbstractHumanUserUpdate";
import { AbstractPaymentLinkUpdate as AbstractPaymentLinkUpdateModel } from "./src/models/AbstractPaymentLinkUpdate";
import { AbstractRefundCommentActive as AbstractRefundCommentActiveModel } from "./src/models/AbstractRefundCommentActive";
import { AbstractSpaceUpdate as AbstractSpaceUpdateModel } from "./src/models/AbstractSpaceUpdate";
import { AbstractSubscriberUpdate as AbstractSubscriberUpdateModel } from "./src/models/AbstractSubscriberUpdate";
import { AbstractSubscriptionAffiliateUpdate as AbstractSubscriptionAffiliateUpdateModel } from "./src/models/AbstractSubscriptionAffiliateUpdate";
import { AbstractSubscriptionMetricUpdate as AbstractSubscriptionMetricUpdateModel } from "./src/models/AbstractSubscriptionMetricUpdate";
import { AbstractSubscriptionProductActive as AbstractSubscriptionProductActiveModel } from "./src/models/AbstractSubscriptionProductActive";
import { AbstractTokenUpdate as AbstractTokenUpdateModel } from "./src/models/AbstractTokenUpdate";
import { AbstractTransactionCommentActive as AbstractTransactionCommentActiveModel } from "./src/models/AbstractTransactionCommentActive";
import { AbstractTransactionInvoiceCommentActive as AbstractTransactionInvoiceCommentActiveModel } from "./src/models/AbstractTransactionInvoiceCommentActive";
import { AbstractTransactionPending as AbstractTransactionPendingModel } from "./src/models/AbstractTransactionPending";
import { AbstractWebhookListenerUpdate as AbstractWebhookListenerUpdateModel } from "./src/models/AbstractWebhookListenerUpdate";
import { AbstractWebhookUrlUpdate as AbstractWebhookUrlUpdateModel } from "./src/models/AbstractWebhookUrlUpdate";
import { Account as AccountModel } from "./src/models/Account";
import { AccountState as AccountStateModel } from "./src/models/AccountState";
import { AccountType as AccountTypeModel } from "./src/models/AccountType";
import { Address as AddressModel } from "./src/models/Address";
import { AddressCreate as AddressCreateModel } from "./src/models/AddressCreate";
import { ChargeAttemptEnvironment as ChargeAttemptEnvironmentModel } from "./src/models/ChargeAttemptEnvironment";
import { ChargeAttemptState as ChargeAttemptStateModel } from "./src/models/ChargeAttemptState";
import { ChargeFlow as ChargeFlowModel } from "./src/models/ChargeFlow";
import { ChargeFlowLevelConfiguration as ChargeFlowLevelConfigurationModel } from "./src/models/ChargeFlowLevelConfiguration";
import { ChargeFlowLevelConfigurationType as ChargeFlowLevelConfigurationTypeModel } from "./src/models/ChargeFlowLevelConfigurationType";
import { ChargeFlowLevelState as ChargeFlowLevelStateModel } from "./src/models/ChargeFlowLevelState";
import { ChargeState as ChargeStateModel } from "./src/models/ChargeState";
import { ChargeType as ChargeTypeModel } from "./src/models/ChargeType";
import { ClientError as ClientErrorModel } from "./src/models/ClientError";
import { ClientErrorType as ClientErrorTypeModel } from "./src/models/ClientErrorType";
import { CompletionLineItem as CompletionLineItemModel } from "./src/models/CompletionLineItem";
import { CompletionLineItemCreate as CompletionLineItemCreateModel } from "./src/models/CompletionLineItemCreate";
import { Condition as ConditionModel } from "./src/models/Condition";
import { ConditionType as ConditionTypeModel } from "./src/models/ConditionType";
import { ConnectorInvocationStage as ConnectorInvocationStageModel } from "./src/models/ConnectorInvocationStage";
import { CreationEntityState as CreationEntityStateModel } from "./src/models/CreationEntityState";
import { CriteriaOperator as CriteriaOperatorModel } from "./src/models/CriteriaOperator";
import { CustomersPresence as CustomersPresenceModel } from "./src/models/CustomersPresence";
import { DataCollectionType as DataCollectionTypeModel } from "./src/models/DataCollectionType";
import { DatabaseTranslatedString as DatabaseTranslatedStringModel } from "./src/models/DatabaseTranslatedString";
import { DatabaseTranslatedStringCreate as DatabaseTranslatedStringCreateModel } from "./src/models/DatabaseTranslatedStringCreate";
import { DatabaseTranslatedStringItem as DatabaseTranslatedStringItemModel } from "./src/models/DatabaseTranslatedStringItem";
import { DatabaseTranslatedStringItemCreate as DatabaseTranslatedStringItemCreateModel } from "./src/models/DatabaseTranslatedStringItemCreate";
import { DebtCollectionCase as DebtCollectionCaseModel } from "./src/models/DebtCollectionCase";
import { DebtCollectionCaseDocument as DebtCollectionCaseDocumentModel } from "./src/models/DebtCollectionCaseDocument";
import { DebtCollectionCaseSource as DebtCollectionCaseSourceModel } from "./src/models/DebtCollectionCaseSource";
import { DebtCollectionCaseState as DebtCollectionCaseStateModel } from "./src/models/DebtCollectionCaseState";
import { DebtCollectionEnvironment as DebtCollectionEnvironmentModel } from "./src/models/DebtCollectionEnvironment";
import { DebtCollectionReceipt as DebtCollectionReceiptModel } from "./src/models/DebtCollectionReceipt";
import { DebtCollectionReceiptSource as DebtCollectionReceiptSourceModel } from "./src/models/DebtCollectionReceiptSource";
import { DebtCollector as DebtCollectorModel } from "./src/models/DebtCollector";
import { DebtCollectorCondition as DebtCollectorConditionModel } from "./src/models/DebtCollectorCondition";
import { DebtCollectorConditionType as DebtCollectorConditionTypeModel } from "./src/models/DebtCollectorConditionType";
import { DebtCollectorConfiguration as DebtCollectorConfigurationModel } from "./src/models/DebtCollectorConfiguration";
import { DeliveryIndicationDecisionReason as DeliveryIndicationDecisionReasonModel } from "./src/models/DeliveryIndicationDecisionReason";
import { DeliveryIndicationState as DeliveryIndicationStateModel } from "./src/models/DeliveryIndicationState";
import { DocumentTemplate as DocumentTemplateModel } from "./src/models/DocumentTemplate";
import { DocumentTemplateType as DocumentTemplateTypeModel } from "./src/models/DocumentTemplateType";
import { DocumentTemplateTypeGroup as DocumentTemplateTypeGroupModel } from "./src/models/DocumentTemplateTypeGroup";
import { EntityExportRequest as EntityExportRequestModel } from "./src/models/EntityExportRequest";
import { EntityQuery as EntityQueryModel } from "./src/models/EntityQuery";
import { EntityQueryFilter as EntityQueryFilterModel } from "./src/models/EntityQueryFilter";
import { EntityQueryFilterType as EntityQueryFilterTypeModel } from "./src/models/EntityQueryFilterType";
import { EntityQueryOrderBy as EntityQueryOrderByModel } from "./src/models/EntityQueryOrderBy";
import { EntityQueryOrderByType as EntityQueryOrderByTypeModel } from "./src/models/EntityQueryOrderByType";
import { Environment as EnvironmentModel } from "./src/models/Environment";
import { FailureCategory as FailureCategoryModel } from "./src/models/FailureCategory";
import { FailureReason as FailureReasonModel } from "./src/models/FailureReason";
import { Feature as FeatureModel } from "./src/models/Feature";
import { Gender as GenderModel } from "./src/models/Gender";
import { HumanUser as HumanUserModel } from "./src/models/HumanUser";
import { InstallmentCalculatedPlan as InstallmentCalculatedPlanModel } from "./src/models/InstallmentCalculatedPlan";
import { InstallmentCalculatedSlice as InstallmentCalculatedSliceModel } from "./src/models/InstallmentCalculatedSlice";
import { InstallmentPayment as InstallmentPaymentModel } from "./src/models/InstallmentPayment";
import { InstallmentPaymentSliceState as InstallmentPaymentSliceStateModel } from "./src/models/InstallmentPaymentSliceState";
import { InstallmentPaymentState as InstallmentPaymentStateModel } from "./src/models/InstallmentPaymentState";
import { InstallmentPlanConfiguration as InstallmentPlanConfigurationModel } from "./src/models/InstallmentPlanConfiguration";
import { InstallmentPlanSliceConfiguration as InstallmentPlanSliceConfigurationModel } from "./src/models/InstallmentPlanSliceConfiguration";
import { Label as LabelModel } from "./src/models/Label";
import { LabelDescriptor as LabelDescriptorModel } from "./src/models/LabelDescriptor";
import { LabelDescriptorCategory as LabelDescriptorCategoryModel } from "./src/models/LabelDescriptorCategory";
import { LabelDescriptorGroup as LabelDescriptorGroupModel } from "./src/models/LabelDescriptorGroup";
import { LabelDescriptorType as LabelDescriptorTypeModel } from "./src/models/LabelDescriptorType";
import { LegalOrganizationForm as LegalOrganizationFormModel } from "./src/models/LegalOrganizationForm";
import { LineItem as LineItemModel } from "./src/models/LineItem";
import { LineItemAttribute as LineItemAttributeModel } from "./src/models/LineItemAttribute";
import { LineItemAttributeCreate as LineItemAttributeCreateModel } from "./src/models/LineItemAttributeCreate";
import { LineItemCreate as LineItemCreateModel } from "./src/models/LineItemCreate";
import { LineItemReduction as LineItemReductionModel } from "./src/models/LineItemReduction";
import { LineItemReductionCreate as LineItemReductionCreateModel } from "./src/models/LineItemReductionCreate";
import { LineItemType as LineItemTypeModel } from "./src/models/LineItemType";
import { LocalizedString as LocalizedStringModel } from "./src/models/LocalizedString";
import { ManualTask as ManualTaskModel } from "./src/models/ManualTask";
import { ManualTaskAction as ManualTaskActionModel } from "./src/models/ManualTaskAction";
import { ManualTaskActionStyle as ManualTaskActionStyleModel } from "./src/models/ManualTaskActionStyle";
import { ManualTaskState as ManualTaskStateModel } from "./src/models/ManualTaskState";
import { ManualTaskType as ManualTaskTypeModel } from "./src/models/ManualTaskType";
import { MetricUsage as MetricUsageModel } from "./src/models/MetricUsage";
import { OneClickPaymentMode as OneClickPaymentModeModel } from "./src/models/OneClickPaymentMode";
import { PaymentConnector as PaymentConnectorModel } from "./src/models/PaymentConnector";
import { PaymentConnectorConfiguration as PaymentConnectorConfigurationModel } from "./src/models/PaymentConnectorConfiguration";
import { PaymentConnectorFeature as PaymentConnectorFeatureModel } from "./src/models/PaymentConnectorFeature";
import { PaymentContract as PaymentContractModel } from "./src/models/PaymentContract";
import { PaymentContractState as PaymentContractStateModel } from "./src/models/PaymentContractState";
import { PaymentContractType as PaymentContractTypeModel } from "./src/models/PaymentContractType";
import { PaymentLink as PaymentLinkModel } from "./src/models/PaymentLink";
import { PaymentLinkProtectionMode as PaymentLinkProtectionModeModel } from "./src/models/PaymentLinkProtectionMode";
import { PaymentLinkUpdate as PaymentLinkUpdateModel } from "./src/models/PaymentLinkUpdate";
import { PaymentMethod as PaymentMethodModel } from "./src/models/PaymentMethod";
import { PaymentMethodBrand as PaymentMethodBrandModel } from "./src/models/PaymentMethodBrand";
import { PaymentMethodConfiguration as PaymentMethodConfigurationModel } from "./src/models/PaymentMethodConfiguration";
import { PaymentPrimaryRiskTaker as PaymentPrimaryRiskTakerModel } from "./src/models/PaymentPrimaryRiskTaker";
import { PaymentProcessor as PaymentProcessorModel } from "./src/models/PaymentProcessor";
import { PaymentProcessorConfiguration as PaymentProcessorConfigurationModel } from "./src/models/PaymentProcessorConfiguration";
import { Permission as PermissionModel } from "./src/models/Permission";
import { PersistableCurrencyAmount as PersistableCurrencyAmountModel } from "./src/models/PersistableCurrencyAmount";
import { PersistableCurrencyAmountUpdate as PersistableCurrencyAmountUpdateModel } from "./src/models/PersistableCurrencyAmountUpdate";
import { ProductFeeType as ProductFeeTypeModel } from "./src/models/ProductFeeType";
import { ProductMeteredFee as ProductMeteredFeeModel } from "./src/models/ProductMeteredFee";
import { ProductMeteredFeeUpdate as ProductMeteredFeeUpdateModel } from "./src/models/ProductMeteredFeeUpdate";
import { ProductMeteredTierFee as ProductMeteredTierFeeModel } from "./src/models/ProductMeteredTierFee";
import { ProductMeteredTierFeeUpdate as ProductMeteredTierFeeUpdateModel } from "./src/models/ProductMeteredTierFeeUpdate";
import { ProductMeteredTierPricing as ProductMeteredTierPricingModel } from "./src/models/ProductMeteredTierPricing";
import { ProductPeriodFee as ProductPeriodFeeModel } from "./src/models/ProductPeriodFee";
import { ProductPeriodFeeUpdate as ProductPeriodFeeUpdateModel } from "./src/models/ProductPeriodFeeUpdate";
import { ProductSetupFee as ProductSetupFeeModel } from "./src/models/ProductSetupFee";
import { ProductSetupFeeUpdate as ProductSetupFeeUpdateModel } from "./src/models/ProductSetupFeeUpdate";
import { Refund as RefundModel } from "./src/models/Refund";
import { RefundComment as RefundCommentModel } from "./src/models/RefundComment";
import { RefundCreate as RefundCreateModel } from "./src/models/RefundCreate";
import { RefundState as RefundStateModel } from "./src/models/RefundState";
import { RefundType as RefundTypeModel } from "./src/models/RefundType";
import { RenderedDocument as RenderedDocumentModel } from "./src/models/RenderedDocument";
import { ResourcePath as ResourcePathModel } from "./src/models/ResourcePath";
import { ResourceState as ResourceStateModel } from "./src/models/ResourceState";
import { RestAddressFormat as RestAddressFormatModel } from "./src/models/RestAddressFormat";
import { RestAddressFormatField as RestAddressFormatFieldModel } from "./src/models/RestAddressFormatField";
import { RestCountry as RestCountryModel } from "./src/models/RestCountry";
import { RestCountryState as RestCountryStateModel } from "./src/models/RestCountryState";
import { RestCurrency as RestCurrencyModel } from "./src/models/RestCurrency";
import { RestLanguage as RestLanguageModel } from "./src/models/RestLanguage";
import { Role as RoleModel } from "./src/models/Role";
import { Scope as ScopeModel } from "./src/models/Scope";
import { ServerError as ServerErrorModel } from "./src/models/ServerError";
import { Space as SpaceModel } from "./src/models/Space";
import { SpaceAddress as SpaceAddressModel } from "./src/models/SpaceAddress";
import { SpaceAddressCreate as SpaceAddressCreateModel } from "./src/models/SpaceAddressCreate";
import { SpaceReference as SpaceReferenceModel } from "./src/models/SpaceReference";
import { SpaceReferenceState as SpaceReferenceStateModel } from "./src/models/SpaceReferenceState";
import { SpaceView as SpaceViewModel } from "./src/models/SpaceView";
import { StaticValue as StaticValueModel } from "./src/models/StaticValue";
import { Subscriber as SubscriberModel } from "./src/models/Subscriber";
import { SubscriberUpdate as SubscriberUpdateModel } from "./src/models/SubscriberUpdate";
import { Subscription as SubscriptionModel } from "./src/models/Subscription";
import { SubscriptionAffiliate as SubscriptionAffiliateModel } from "./src/models/SubscriptionAffiliate";
import { SubscriptionAffiliateUpdate as SubscriptionAffiliateUpdateModel } from "./src/models/SubscriptionAffiliateUpdate";
import { SubscriptionChangeRequest as SubscriptionChangeRequestModel } from "./src/models/SubscriptionChangeRequest";
import { SubscriptionCharge as SubscriptionChargeModel } from "./src/models/SubscriptionCharge";
import { SubscriptionChargeCreate as SubscriptionChargeCreateModel } from "./src/models/SubscriptionChargeCreate";
import { SubscriptionChargeProcessingType as SubscriptionChargeProcessingTypeModel } from "./src/models/SubscriptionChargeProcessingType";
import { SubscriptionChargeState as SubscriptionChargeStateModel } from "./src/models/SubscriptionChargeState";
import { SubscriptionChargeType as SubscriptionChargeTypeModel } from "./src/models/SubscriptionChargeType";
import { SubscriptionCreateRequest as SubscriptionCreateRequestModel } from "./src/models/SubscriptionCreateRequest";
import { SubscriptionLedgerEntry as SubscriptionLedgerEntryModel } from "./src/models/SubscriptionLedgerEntry";
import { SubscriptionLedgerEntryCreate as SubscriptionLedgerEntryCreateModel } from "./src/models/SubscriptionLedgerEntryCreate";
import { SubscriptionLedgerEntryState as SubscriptionLedgerEntryStateModel } from "./src/models/SubscriptionLedgerEntryState";
import { SubscriptionMetric as SubscriptionMetricModel } from "./src/models/SubscriptionMetric";
import { SubscriptionMetricType as SubscriptionMetricTypeModel } from "./src/models/SubscriptionMetricType";
import { SubscriptionMetricUpdate as SubscriptionMetricUpdateModel } from "./src/models/SubscriptionMetricUpdate";
import { SubscriptionMetricUsageReport as SubscriptionMetricUsageReportModel } from "./src/models/SubscriptionMetricUsageReport";
import { SubscriptionMetricUsageReportCreate as SubscriptionMetricUsageReportCreateModel } from "./src/models/SubscriptionMetricUsageReportCreate";
import { SubscriptionPeriodBill as SubscriptionPeriodBillModel } from "./src/models/SubscriptionPeriodBill";
import { SubscriptionPeriodBillState as SubscriptionPeriodBillStateModel } from "./src/models/SubscriptionPeriodBillState";
import { SubscriptionProduct as SubscriptionProductModel } from "./src/models/SubscriptionProduct";
import { SubscriptionProductComponent as SubscriptionProductComponentModel } from "./src/models/SubscriptionProductComponent";
import { SubscriptionProductComponentGroup as SubscriptionProductComponentGroupModel } from "./src/models/SubscriptionProductComponentGroup";
import { SubscriptionProductComponentGroupUpdate as SubscriptionProductComponentGroupUpdateModel } from "./src/models/SubscriptionProductComponentGroupUpdate";
import { SubscriptionProductComponentReference as SubscriptionProductComponentReferenceModel } from "./src/models/SubscriptionProductComponentReference";
import { SubscriptionProductComponentReferenceState as SubscriptionProductComponentReferenceStateModel } from "./src/models/SubscriptionProductComponentReferenceState";
import { SubscriptionProductComponentUpdate as SubscriptionProductComponentUpdateModel } from "./src/models/SubscriptionProductComponentUpdate";
import { SubscriptionProductRetirement as SubscriptionProductRetirementModel } from "./src/models/SubscriptionProductRetirement";
import { SubscriptionProductRetirementCreate as SubscriptionProductRetirementCreateModel } from "./src/models/SubscriptionProductRetirementCreate";
import { SubscriptionProductState as SubscriptionProductStateModel } from "./src/models/SubscriptionProductState";
import { SubscriptionProductVersion as SubscriptionProductVersionModel } from "./src/models/SubscriptionProductVersion";
import { SubscriptionProductVersionPending as SubscriptionProductVersionPendingModel } from "./src/models/SubscriptionProductVersionPending";
import { SubscriptionProductVersionRetirement as SubscriptionProductVersionRetirementModel } from "./src/models/SubscriptionProductVersionRetirement";
import { SubscriptionProductVersionRetirementCreate as SubscriptionProductVersionRetirementCreateModel } from "./src/models/SubscriptionProductVersionRetirementCreate";
import { SubscriptionProductVersionState as SubscriptionProductVersionStateModel } from "./src/models/SubscriptionProductVersionState";
import { SubscriptionState as SubscriptionStateModel } from "./src/models/SubscriptionState";
import { SubscriptionSuspension as SubscriptionSuspensionModel } from "./src/models/SubscriptionSuspension";
import { SubscriptionSuspensionAction as SubscriptionSuspensionActionModel } from "./src/models/SubscriptionSuspensionAction";
import { SubscriptionSuspensionCreate as SubscriptionSuspensionCreateModel } from "./src/models/SubscriptionSuspensionCreate";
import { SubscriptionSuspensionReason as SubscriptionSuspensionReasonModel } from "./src/models/SubscriptionSuspensionReason";
import { SubscriptionSuspensionState as SubscriptionSuspensionStateModel } from "./src/models/SubscriptionSuspensionState";
import { SubscriptionUpdate as SubscriptionUpdateModel } from "./src/models/SubscriptionUpdate";
import { SubscriptionVersion as SubscriptionVersionModel } from "./src/models/SubscriptionVersion";
import { SubscriptionVersionState as SubscriptionVersionStateModel } from "./src/models/SubscriptionVersionState";
import { Tax as TaxModel } from "./src/models/Tax";
import { TaxClass as TaxClassModel } from "./src/models/TaxClass";
import { TaxCreate as TaxCreateModel } from "./src/models/TaxCreate";
import { TenantDatabase as TenantDatabaseModel } from "./src/models/TenantDatabase";
import { Token as TokenModel } from "./src/models/Token";
import { TokenVersion as TokenVersionModel } from "./src/models/TokenVersion";
import { TokenVersionState as TokenVersionStateModel } from "./src/models/TokenVersionState";
import { TokenVersionType as TokenVersionTypeModel } from "./src/models/TokenVersionType";
import { TokenizationnMode as TokenizationnModeModel } from "./src/models/TokenizationnMode";
import { Transaction as TransactionModel } from "./src/models/Transaction";
import { TransactionAwareEntity as TransactionAwareEntityModel } from "./src/models/TransactionAwareEntity";
import { TransactionComment as TransactionCommentModel } from "./src/models/TransactionComment";
import { TransactionCompletionMode as TransactionCompletionModeModel } from "./src/models/TransactionCompletionMode";
import { TransactionCompletionRequest as TransactionCompletionRequestModel } from "./src/models/TransactionCompletionRequest";
import { TransactionCompletionState as TransactionCompletionStateModel } from "./src/models/TransactionCompletionState";
import { TransactionEnvironmentSelectionStrategy as TransactionEnvironmentSelectionStrategyModel } from "./src/models/TransactionEnvironmentSelectionStrategy";
import { TransactionGroup as TransactionGroupModel } from "./src/models/TransactionGroup";
import { TransactionGroupState as TransactionGroupStateModel } from "./src/models/TransactionGroupState";
import { TransactionInvoiceComment as TransactionInvoiceCommentModel } from "./src/models/TransactionInvoiceComment";
import { TransactionInvoiceReplacement as TransactionInvoiceReplacementModel } from "./src/models/TransactionInvoiceReplacement";
import { TransactionInvoiceState as TransactionInvoiceStateModel } from "./src/models/TransactionInvoiceState";
import { TransactionLineItemUpdateRequest as TransactionLineItemUpdateRequestModel } from "./src/models/TransactionLineItemUpdateRequest";
import { TransactionState as TransactionStateModel } from "./src/models/TransactionState";
import { TransactionUserInterfaceType as TransactionUserInterfaceTypeModel } from "./src/models/TransactionUserInterfaceType";
import { TransactionVoidMode as TransactionVoidModeModel } from "./src/models/TransactionVoidMode";
import { TransactionVoidState as TransactionVoidStateModel } from "./src/models/TransactionVoidState";
import { TwoFactorAuthenticationType as TwoFactorAuthenticationTypeModel } from "./src/models/TwoFactorAuthenticationType";
import { UnencryptedCardData as UnencryptedCardDataModel } from "./src/models/UnencryptedCardData";
import { UnencryptedCardDataCreate as UnencryptedCardDataCreateModel } from "./src/models/UnencryptedCardDataCreate";
import { User as UserModel } from "./src/models/User";
import { UserAccountRole as UserAccountRoleModel } from "./src/models/UserAccountRole";
import { UserSpaceRole as UserSpaceRoleModel } from "./src/models/UserSpaceRole";
import { UserType as UserTypeModel } from "./src/models/UserType";
import { WebhookIdentity as WebhookIdentityModel } from "./src/models/WebhookIdentity";
import { WebhookListener as WebhookListenerModel } from "./src/models/WebhookListener";
import { WebhookListenerEntity as WebhookListenerEntityModel } from "./src/models/WebhookListenerEntity";
import { WebhookUrl as WebhookUrlModel } from "./src/models/WebhookUrl";
import { AccountCreate as AccountCreateModel } from "./src/models/AccountCreate";
import { AccountUpdate as AccountUpdateModel } from "./src/models/AccountUpdate";
import { ApplicationUser as ApplicationUserModel } from "./src/models/ApplicationUser";
import { ApplicationUserCreate as ApplicationUserCreateModel } from "./src/models/ApplicationUserCreate";
import { ApplicationUserUpdate as ApplicationUserUpdateModel } from "./src/models/ApplicationUserUpdate";
import { Charge as ChargeModel } from "./src/models/Charge";
import { ChargeAttempt as ChargeAttemptModel } from "./src/models/ChargeAttempt";
import { ChargeFlowLevel as ChargeFlowLevelModel } from "./src/models/ChargeFlowLevel";
import { ConnectorInvocation as ConnectorInvocationModel } from "./src/models/ConnectorInvocation";
import { DebtCollectionCaseCreate as DebtCollectionCaseCreateModel } from "./src/models/DebtCollectionCaseCreate";
import { DebtCollectionCaseUpdate as DebtCollectionCaseUpdateModel } from "./src/models/DebtCollectionCaseUpdate";
import { DeliveryIndication as DeliveryIndicationModel } from "./src/models/DeliveryIndication";
import { HumanUserCreate as HumanUserCreateModel } from "./src/models/HumanUserCreate";
import { HumanUserUpdate as HumanUserUpdateModel } from "./src/models/HumanUserUpdate";
import { InstallmentPaymentSlice as InstallmentPaymentSliceModel } from "./src/models/InstallmentPaymentSlice";
import { PaymentLinkActive as PaymentLinkActiveModel } from "./src/models/PaymentLinkActive";
import { PaymentLinkCreate as PaymentLinkCreateModel } from "./src/models/PaymentLinkCreate";
import { RefundCommentActive as RefundCommentActiveModel } from "./src/models/RefundCommentActive";
import { RefundCommentCreate as RefundCommentCreateModel } from "./src/models/RefundCommentCreate";
import { SpaceCreate as SpaceCreateModel } from "./src/models/SpaceCreate";
import { SpaceUpdate as SpaceUpdateModel } from "./src/models/SpaceUpdate";
import { SubscriberActive as SubscriberActiveModel } from "./src/models/SubscriberActive";
import { SubscriberCreate as SubscriberCreateModel } from "./src/models/SubscriberCreate";
import { SubscriptionAffiliateCreate as SubscriptionAffiliateCreateModel } from "./src/models/SubscriptionAffiliateCreate";
import { SubscriptionAffiliateDeleted as SubscriptionAffiliateDeletedModel } from "./src/models/SubscriptionAffiliateDeleted";
import { SubscriptionAffiliateInactive as SubscriptionAffiliateInactiveModel } from "./src/models/SubscriptionAffiliateInactive";
import { SubscriptionMetricActive as SubscriptionMetricActiveModel } from "./src/models/SubscriptionMetricActive";
import { SubscriptionMetricCreate as SubscriptionMetricCreateModel } from "./src/models/SubscriptionMetricCreate";
import { SubscriptionPending as SubscriptionPendingModel } from "./src/models/SubscriptionPending";
import { SubscriptionProductActive as SubscriptionProductActiveModel } from "./src/models/SubscriptionProductActive";
import { SubscriptionProductCreate as SubscriptionProductCreateModel } from "./src/models/SubscriptionProductCreate";
import { SubscriptionSuspensionRunning as SubscriptionSuspensionRunningModel } from "./src/models/SubscriptionSuspensionRunning";
import { TokenCreate as TokenCreateModel } from "./src/models/TokenCreate";
import { TokenUpdate as TokenUpdateModel } from "./src/models/TokenUpdate";
import { TransactionCommentActive as TransactionCommentActiveModel } from "./src/models/TransactionCommentActive";
import { TransactionCommentCreate as TransactionCommentCreateModel } from "./src/models/TransactionCommentCreate";
import { TransactionCompletion as TransactionCompletionModel } from "./src/models/TransactionCompletion";
import { TransactionCreate as TransactionCreateModel } from "./src/models/TransactionCreate";
import { TransactionInvoice as TransactionInvoiceModel } from "./src/models/TransactionInvoice";
import { TransactionInvoiceCommentActive as TransactionInvoiceCommentActiveModel } from "./src/models/TransactionInvoiceCommentActive";
import { TransactionInvoiceCommentCreate as TransactionInvoiceCommentCreateModel } from "./src/models/TransactionInvoiceCommentCreate";
import { TransactionLineItemVersion as TransactionLineItemVersionModel } from "./src/models/TransactionLineItemVersion";
import { TransactionPending as TransactionPendingModel } from "./src/models/TransactionPending";
import { TransactionVoid as TransactionVoidModel } from "./src/models/TransactionVoid";
import { WebhookListenerCreate as WebhookListenerCreateModel } from "./src/models/WebhookListenerCreate";
import { WebhookListenerUpdate as WebhookListenerUpdateModel } from "./src/models/WebhookListenerUpdate";
import { WebhookUrlCreate as WebhookUrlCreateModel } from "./src/models/WebhookUrlCreate";
import { WebhookUrlUpdate as WebhookUrlUpdateModel } from "./src/models/WebhookUrlUpdate";
import { ApplicationUserCreateWithMacKey as ApplicationUserCreateWithMacKeyModel } from "./src/models/ApplicationUserCreateWithMacKey";
import { SubscriptionAffiliateDeleting as SubscriptionAffiliateDeletingModel } from "./src/models/SubscriptionAffiliateDeleting";

import { AccountService as AccountServiceApi } from "./src/api/AccountService";
import { ApplicationUserService as ApplicationUserServiceApi } from "./src/api/ApplicationUserService";
import { CardProcessingService as CardProcessingServiceApi } from "./src/api/CardProcessingService";
import { ChargeAttemptService as ChargeAttemptServiceApi } from "./src/api/ChargeAttemptService";
import { ChargeFlowLevelService as ChargeFlowLevelServiceApi } from "./src/api/ChargeFlowLevelService";
import { ChargeFlowService as ChargeFlowServiceApi } from "./src/api/ChargeFlowService";
import { ConditionTypeService as ConditionTypeServiceApi } from "./src/api/ConditionTypeService";
import { CountryService as CountryServiceApi } from "./src/api/CountryService";
import { CountryStateService as CountryStateServiceApi } from "./src/api/CountryStateService";
import { CurrencyService as CurrencyServiceApi } from "./src/api/CurrencyService";
import { DebtCollectionCaseService as DebtCollectionCaseServiceApi } from "./src/api/DebtCollectionCaseService";
import { DebtCollectorConfigurationService as DebtCollectorConfigurationServiceApi } from "./src/api/DebtCollectorConfigurationService";
import { DebtCollectorService as DebtCollectorServiceApi } from "./src/api/DebtCollectorService";
import { DeliveryIndicationService as DeliveryIndicationServiceApi } from "./src/api/DeliveryIndicationService";
import { DocumentTemplateService as DocumentTemplateServiceApi } from "./src/api/DocumentTemplateService";
import { DocumentTemplateTypeService as DocumentTemplateTypeServiceApi } from "./src/api/DocumentTemplateTypeService";
import { HumanUserService as HumanUserServiceApi } from "./src/api/HumanUserService";
import { InstallmentPaymentService as InstallmentPaymentServiceApi } from "./src/api/InstallmentPaymentService";
import { InstallmentPaymentSliceService as InstallmentPaymentSliceServiceApi } from "./src/api/InstallmentPaymentSliceService";
import { InstallmentPlanCalculationService as InstallmentPlanCalculationServiceApi } from "./src/api/InstallmentPlanCalculationService";
import { InstallmentPlanConfigurationService as InstallmentPlanConfigurationServiceApi } from "./src/api/InstallmentPlanConfigurationService";
import { InstallmentPlanSliceConfigurationService as InstallmentPlanSliceConfigurationServiceApi } from "./src/api/InstallmentPlanSliceConfigurationService";
import { LabelDescriptionGroupService as LabelDescriptionGroupServiceApi } from "./src/api/LabelDescriptionGroupService";
import { LabelDescriptionService as LabelDescriptionServiceApi } from "./src/api/LabelDescriptionService";
import { LanguageService as LanguageServiceApi } from "./src/api/LanguageService";
import { LegalOrganizationFormService as LegalOrganizationFormServiceApi } from "./src/api/LegalOrganizationFormService";
import { ManualTaskService as ManualTaskServiceApi } from "./src/api/ManualTaskService";
import { MerticUsageService as MerticUsageServiceApi } from "./src/api/MerticUsageService";
import { PaymentConnectorConfigurationService as PaymentConnectorConfigurationServiceApi } from "./src/api/PaymentConnectorConfigurationService";
import { PaymentConnectorService as PaymentConnectorServiceApi } from "./src/api/PaymentConnectorService";
import { PaymentLinkService as PaymentLinkServiceApi } from "./src/api/PaymentLinkService";
import { PaymentMethodConfigurationService as PaymentMethodConfigurationServiceApi } from "./src/api/PaymentMethodConfigurationService";
import { PaymentMethodService as PaymentMethodServiceApi } from "./src/api/PaymentMethodService";
import { PaymentProcessorConfigurationService as PaymentProcessorConfigurationServiceApi } from "./src/api/PaymentProcessorConfigurationService";
import { PaymentProcessorService as PaymentProcessorServiceApi } from "./src/api/PaymentProcessorService";
import { PermissionService as PermissionServiceApi } from "./src/api/PermissionService";
import { RefundCommentService as RefundCommentServiceApi } from "./src/api/RefundCommentService";
import { RefundService as RefundServiceApi } from "./src/api/RefundService";
import { SpaceService as SpaceServiceApi } from "./src/api/SpaceService";
import { StaticValueService as StaticValueServiceApi } from "./src/api/StaticValueService";
import { SubscriberService as SubscriberServiceApi } from "./src/api/SubscriberService";
import { SubscriptionAffiliateService as SubscriptionAffiliateServiceApi } from "./src/api/SubscriptionAffiliateService";
import { SubscriptionChargeService as SubscriptionChargeServiceApi } from "./src/api/SubscriptionChargeService";
import { SubscriptionLedgerEntryService as SubscriptionLedgerEntryServiceApi } from "./src/api/SubscriptionLedgerEntryService";
import { SubscriptionMetricService as SubscriptionMetricServiceApi } from "./src/api/SubscriptionMetricService";
import { SubscriptionMetricUsageService as SubscriptionMetricUsageServiceApi } from "./src/api/SubscriptionMetricUsageService";
import { SubscriptionPeriodBillService as SubscriptionPeriodBillServiceApi } from "./src/api/SubscriptionPeriodBillService";
import { SubscriptionProductComponentGroupService as SubscriptionProductComponentGroupServiceApi } from "./src/api/SubscriptionProductComponentGroupService";
import { SubscriptionProductComponentService as SubscriptionProductComponentServiceApi } from "./src/api/SubscriptionProductComponentService";
import { SubscriptionProductFeeTierService as SubscriptionProductFeeTierServiceApi } from "./src/api/SubscriptionProductFeeTierService";
import { SubscriptionProductMeteredFeeService as SubscriptionProductMeteredFeeServiceApi } from "./src/api/SubscriptionProductMeteredFeeService";
import { SubscriptionProductPeriodFeeService as SubscriptionProductPeriodFeeServiceApi } from "./src/api/SubscriptionProductPeriodFeeService";
import { SubscriptionProductRetirementService as SubscriptionProductRetirementServiceApi } from "./src/api/SubscriptionProductRetirementService";
import { SubscriptionProductService as SubscriptionProductServiceApi } from "./src/api/SubscriptionProductService";
import { SubscriptionProductSetupFeeService as SubscriptionProductSetupFeeServiceApi } from "./src/api/SubscriptionProductSetupFeeService";
import { SubscriptionProductVersionRetirementService as SubscriptionProductVersionRetirementServiceApi } from "./src/api/SubscriptionProductVersionRetirementService";
import { SubscriptionProductVersionService as SubscriptionProductVersionServiceApi } from "./src/api/SubscriptionProductVersionService";
import { SubscriptionService as SubscriptionServiceApi } from "./src/api/SubscriptionService";
import { SubscriptionSuspensionService as SubscriptionSuspensionServiceApi } from "./src/api/SubscriptionSuspensionService";
import { SubscriptionVersionService as SubscriptionVersionServiceApi } from "./src/api/SubscriptionVersionService";
import { TokenService as TokenServiceApi } from "./src/api/TokenService";
import { TokenVersionService as TokenVersionServiceApi } from "./src/api/TokenVersionService";
import { TransactionCommentService as TransactionCommentServiceApi } from "./src/api/TransactionCommentService";
import { TransactionCompletionService as TransactionCompletionServiceApi } from "./src/api/TransactionCompletionService";
import { TransactionInvoiceCommentService as TransactionInvoiceCommentServiceApi } from "./src/api/TransactionInvoiceCommentService";
import { TransactionInvoiceService as TransactionInvoiceServiceApi } from "./src/api/TransactionInvoiceService";
import { TransactionService as TransactionServiceApi } from "./src/api/TransactionService";
import { TransactionVoidService as TransactionVoidServiceApi } from "./src/api/TransactionVoidService";
import { UserAccountRoleService as UserAccountRoleServiceApi } from "./src/api/UserAccountRoleService";
import { UserSpaceRoleService as UserSpaceRoleServiceApi } from "./src/api/UserSpaceRoleService";
import { WebhookListenerService as WebhookListenerServiceApi } from "./src/api/WebhookListenerService";
import { WebhookUrlService as WebhookUrlServiceApi } from "./src/api/WebhookUrlService";


export namespace Wallee {
    export namespace model {
        export type AbstractAccountUpdate = AbstractAccountUpdateModel;
        export const AbstractAccountUpdate = AbstractAccountUpdateModel;
        export type AbstractApplicationUserUpdate = AbstractApplicationUserUpdateModel;
        export const AbstractApplicationUserUpdate = AbstractApplicationUserUpdateModel;
        export type AbstractDebtCollectionCaseUpdate = AbstractDebtCollectionCaseUpdateModel;
        export const AbstractDebtCollectionCaseUpdate = AbstractDebtCollectionCaseUpdateModel;
        export type AbstractHumanUserUpdate = AbstractHumanUserUpdateModel;
        export const AbstractHumanUserUpdate = AbstractHumanUserUpdateModel;
        export type AbstractPaymentLinkUpdate = AbstractPaymentLinkUpdateModel;
        export const AbstractPaymentLinkUpdate = AbstractPaymentLinkUpdateModel;
        export type AbstractRefundCommentActive = AbstractRefundCommentActiveModel;
        export const AbstractRefundCommentActive = AbstractRefundCommentActiveModel;
        export type AbstractSpaceUpdate = AbstractSpaceUpdateModel;
        export const AbstractSpaceUpdate = AbstractSpaceUpdateModel;
        export type AbstractSubscriberUpdate = AbstractSubscriberUpdateModel;
        export const AbstractSubscriberUpdate = AbstractSubscriberUpdateModel;
        export type AbstractSubscriptionAffiliateUpdate = AbstractSubscriptionAffiliateUpdateModel;
        export const AbstractSubscriptionAffiliateUpdate = AbstractSubscriptionAffiliateUpdateModel;
        export type AbstractSubscriptionMetricUpdate = AbstractSubscriptionMetricUpdateModel;
        export const AbstractSubscriptionMetricUpdate = AbstractSubscriptionMetricUpdateModel;
        export type AbstractSubscriptionProductActive = AbstractSubscriptionProductActiveModel;
        export const AbstractSubscriptionProductActive = AbstractSubscriptionProductActiveModel;
        export type AbstractTokenUpdate = AbstractTokenUpdateModel;
        export const AbstractTokenUpdate = AbstractTokenUpdateModel;
        export type AbstractTransactionCommentActive = AbstractTransactionCommentActiveModel;
        export const AbstractTransactionCommentActive = AbstractTransactionCommentActiveModel;
        export type AbstractTransactionInvoiceCommentActive = AbstractTransactionInvoiceCommentActiveModel;
        export const AbstractTransactionInvoiceCommentActive = AbstractTransactionInvoiceCommentActiveModel;
        export type AbstractTransactionPending = AbstractTransactionPendingModel;
        export const AbstractTransactionPending = AbstractTransactionPendingModel;
        export type AbstractWebhookListenerUpdate = AbstractWebhookListenerUpdateModel;
        export const AbstractWebhookListenerUpdate = AbstractWebhookListenerUpdateModel;
        export type AbstractWebhookUrlUpdate = AbstractWebhookUrlUpdateModel;
        export const AbstractWebhookUrlUpdate = AbstractWebhookUrlUpdateModel;
        export type Account = AccountModel;
        export const Account = AccountModel;
        export type AccountState = AccountStateModel;
        export const AccountState = AccountStateModel;
        export type AccountType = AccountTypeModel;
        export const AccountType = AccountTypeModel;
        export type Address = AddressModel;
        export const Address = AddressModel;
        export type AddressCreate = AddressCreateModel;
        export const AddressCreate = AddressCreateModel;
        export type ChargeAttemptEnvironment = ChargeAttemptEnvironmentModel;
        export const ChargeAttemptEnvironment = ChargeAttemptEnvironmentModel;
        export type ChargeAttemptState = ChargeAttemptStateModel;
        export const ChargeAttemptState = ChargeAttemptStateModel;
        export type ChargeFlow = ChargeFlowModel;
        export const ChargeFlow = ChargeFlowModel;
        export type ChargeFlowLevelConfiguration = ChargeFlowLevelConfigurationModel;
        export const ChargeFlowLevelConfiguration = ChargeFlowLevelConfigurationModel;
        export type ChargeFlowLevelConfigurationType = ChargeFlowLevelConfigurationTypeModel;
        export const ChargeFlowLevelConfigurationType = ChargeFlowLevelConfigurationTypeModel;
        export type ChargeFlowLevelState = ChargeFlowLevelStateModel;
        export const ChargeFlowLevelState = ChargeFlowLevelStateModel;
        export type ChargeState = ChargeStateModel;
        export const ChargeState = ChargeStateModel;
        export type ChargeType = ChargeTypeModel;
        export const ChargeType = ChargeTypeModel;
        export type ClientError = ClientErrorModel;
        export const ClientError = ClientErrorModel;
        export type ClientErrorType = ClientErrorTypeModel;
        export const ClientErrorType = ClientErrorTypeModel;
        export type CompletionLineItem = CompletionLineItemModel;
        export const CompletionLineItem = CompletionLineItemModel;
        export type CompletionLineItemCreate = CompletionLineItemCreateModel;
        export const CompletionLineItemCreate = CompletionLineItemCreateModel;
        export type Condition = ConditionModel;
        export const Condition = ConditionModel;
        export type ConditionType = ConditionTypeModel;
        export const ConditionType = ConditionTypeModel;
        export type ConnectorInvocationStage = ConnectorInvocationStageModel;
        export const ConnectorInvocationStage = ConnectorInvocationStageModel;
        export type CreationEntityState = CreationEntityStateModel;
        export const CreationEntityState = CreationEntityStateModel;
        export type CriteriaOperator = CriteriaOperatorModel;
        export const CriteriaOperator = CriteriaOperatorModel;
        export type CustomersPresence = CustomersPresenceModel;
        export const CustomersPresence = CustomersPresenceModel;
        export type DataCollectionType = DataCollectionTypeModel;
        export const DataCollectionType = DataCollectionTypeModel;
        export type DatabaseTranslatedString = DatabaseTranslatedStringModel;
        export const DatabaseTranslatedString = DatabaseTranslatedStringModel;
        export type DatabaseTranslatedStringCreate = DatabaseTranslatedStringCreateModel;
        export const DatabaseTranslatedStringCreate = DatabaseTranslatedStringCreateModel;
        export type DatabaseTranslatedStringItem = DatabaseTranslatedStringItemModel;
        export const DatabaseTranslatedStringItem = DatabaseTranslatedStringItemModel;
        export type DatabaseTranslatedStringItemCreate = DatabaseTranslatedStringItemCreateModel;
        export const DatabaseTranslatedStringItemCreate = DatabaseTranslatedStringItemCreateModel;
        export type DebtCollectionCase = DebtCollectionCaseModel;
        export const DebtCollectionCase = DebtCollectionCaseModel;
        export type DebtCollectionCaseDocument = DebtCollectionCaseDocumentModel;
        export const DebtCollectionCaseDocument = DebtCollectionCaseDocumentModel;
        export type DebtCollectionCaseSource = DebtCollectionCaseSourceModel;
        export const DebtCollectionCaseSource = DebtCollectionCaseSourceModel;
        export type DebtCollectionCaseState = DebtCollectionCaseStateModel;
        export const DebtCollectionCaseState = DebtCollectionCaseStateModel;
        export type DebtCollectionEnvironment = DebtCollectionEnvironmentModel;
        export const DebtCollectionEnvironment = DebtCollectionEnvironmentModel;
        export type DebtCollectionReceipt = DebtCollectionReceiptModel;
        export const DebtCollectionReceipt = DebtCollectionReceiptModel;
        export type DebtCollectionReceiptSource = DebtCollectionReceiptSourceModel;
        export const DebtCollectionReceiptSource = DebtCollectionReceiptSourceModel;
        export type DebtCollector = DebtCollectorModel;
        export const DebtCollector = DebtCollectorModel;
        export type DebtCollectorCondition = DebtCollectorConditionModel;
        export const DebtCollectorCondition = DebtCollectorConditionModel;
        export type DebtCollectorConditionType = DebtCollectorConditionTypeModel;
        export const DebtCollectorConditionType = DebtCollectorConditionTypeModel;
        export type DebtCollectorConfiguration = DebtCollectorConfigurationModel;
        export const DebtCollectorConfiguration = DebtCollectorConfigurationModel;
        export type DeliveryIndicationDecisionReason = DeliveryIndicationDecisionReasonModel;
        export const DeliveryIndicationDecisionReason = DeliveryIndicationDecisionReasonModel;
        export type DeliveryIndicationState = DeliveryIndicationStateModel;
        export const DeliveryIndicationState = DeliveryIndicationStateModel;
        export type DocumentTemplate = DocumentTemplateModel;
        export const DocumentTemplate = DocumentTemplateModel;
        export type DocumentTemplateType = DocumentTemplateTypeModel;
        export const DocumentTemplateType = DocumentTemplateTypeModel;
        export type DocumentTemplateTypeGroup = DocumentTemplateTypeGroupModel;
        export const DocumentTemplateTypeGroup = DocumentTemplateTypeGroupModel;
        export type EntityExportRequest = EntityExportRequestModel;
        export const EntityExportRequest = EntityExportRequestModel;
        export type EntityQuery = EntityQueryModel;
        export const EntityQuery = EntityQueryModel;
        export type EntityQueryFilter = EntityQueryFilterModel;
        export const EntityQueryFilter = EntityQueryFilterModel;
        export type EntityQueryFilterType = EntityQueryFilterTypeModel;
        export const EntityQueryFilterType = EntityQueryFilterTypeModel;
        export type EntityQueryOrderBy = EntityQueryOrderByModel;
        export const EntityQueryOrderBy = EntityQueryOrderByModel;
        export type EntityQueryOrderByType = EntityQueryOrderByTypeModel;
        export const EntityQueryOrderByType = EntityQueryOrderByTypeModel;
        export type Environment = EnvironmentModel;
        export const Environment = EnvironmentModel;
        export type FailureCategory = FailureCategoryModel;
        export const FailureCategory = FailureCategoryModel;
        export type FailureReason = FailureReasonModel;
        export const FailureReason = FailureReasonModel;
        export type Feature = FeatureModel;
        export const Feature = FeatureModel;
        export type Gender = GenderModel;
        export const Gender = GenderModel;
        export type HumanUser = HumanUserModel;
        export const HumanUser = HumanUserModel;
        export type InstallmentCalculatedPlan = InstallmentCalculatedPlanModel;
        export const InstallmentCalculatedPlan = InstallmentCalculatedPlanModel;
        export type InstallmentCalculatedSlice = InstallmentCalculatedSliceModel;
        export const InstallmentCalculatedSlice = InstallmentCalculatedSliceModel;
        export type InstallmentPayment = InstallmentPaymentModel;
        export const InstallmentPayment = InstallmentPaymentModel;
        export type InstallmentPaymentSliceState = InstallmentPaymentSliceStateModel;
        export const InstallmentPaymentSliceState = InstallmentPaymentSliceStateModel;
        export type InstallmentPaymentState = InstallmentPaymentStateModel;
        export const InstallmentPaymentState = InstallmentPaymentStateModel;
        export type InstallmentPlanConfiguration = InstallmentPlanConfigurationModel;
        export const InstallmentPlanConfiguration = InstallmentPlanConfigurationModel;
        export type InstallmentPlanSliceConfiguration = InstallmentPlanSliceConfigurationModel;
        export const InstallmentPlanSliceConfiguration = InstallmentPlanSliceConfigurationModel;
        export type Label = LabelModel;
        export const Label = LabelModel;
        export type LabelDescriptor = LabelDescriptorModel;
        export const LabelDescriptor = LabelDescriptorModel;
        export type LabelDescriptorCategory = LabelDescriptorCategoryModel;
        export const LabelDescriptorCategory = LabelDescriptorCategoryModel;
        export type LabelDescriptorGroup = LabelDescriptorGroupModel;
        export const LabelDescriptorGroup = LabelDescriptorGroupModel;
        export type LabelDescriptorType = LabelDescriptorTypeModel;
        export const LabelDescriptorType = LabelDescriptorTypeModel;
        export type LegalOrganizationForm = LegalOrganizationFormModel;
        export const LegalOrganizationForm = LegalOrganizationFormModel;
        export type LineItem = LineItemModel;
        export const LineItem = LineItemModel;
        export type LineItemAttribute = LineItemAttributeModel;
        export const LineItemAttribute = LineItemAttributeModel;
        export type LineItemAttributeCreate = LineItemAttributeCreateModel;
        export const LineItemAttributeCreate = LineItemAttributeCreateModel;
        export type LineItemCreate = LineItemCreateModel;
        export const LineItemCreate = LineItemCreateModel;
        export type LineItemReduction = LineItemReductionModel;
        export const LineItemReduction = LineItemReductionModel;
        export type LineItemReductionCreate = LineItemReductionCreateModel;
        export const LineItemReductionCreate = LineItemReductionCreateModel;
        export type LineItemType = LineItemTypeModel;
        export const LineItemType = LineItemTypeModel;
        export type LocalizedString = LocalizedStringModel;
        export const LocalizedString = LocalizedStringModel;
        export type ManualTask = ManualTaskModel;
        export const ManualTask = ManualTaskModel;
        export type ManualTaskAction = ManualTaskActionModel;
        export const ManualTaskAction = ManualTaskActionModel;
        export type ManualTaskActionStyle = ManualTaskActionStyleModel;
        export const ManualTaskActionStyle = ManualTaskActionStyleModel;
        export type ManualTaskState = ManualTaskStateModel;
        export const ManualTaskState = ManualTaskStateModel;
        export type ManualTaskType = ManualTaskTypeModel;
        export const ManualTaskType = ManualTaskTypeModel;
        export type MetricUsage = MetricUsageModel;
        export const MetricUsage = MetricUsageModel;
        export type OneClickPaymentMode = OneClickPaymentModeModel;
        export const OneClickPaymentMode = OneClickPaymentModeModel;
        export type PaymentConnector = PaymentConnectorModel;
        export const PaymentConnector = PaymentConnectorModel;
        export type PaymentConnectorConfiguration = PaymentConnectorConfigurationModel;
        export const PaymentConnectorConfiguration = PaymentConnectorConfigurationModel;
        export type PaymentConnectorFeature = PaymentConnectorFeatureModel;
        export const PaymentConnectorFeature = PaymentConnectorFeatureModel;
        export type PaymentContract = PaymentContractModel;
        export const PaymentContract = PaymentContractModel;
        export type PaymentContractState = PaymentContractStateModel;
        export const PaymentContractState = PaymentContractStateModel;
        export type PaymentContractType = PaymentContractTypeModel;
        export const PaymentContractType = PaymentContractTypeModel;
        export type PaymentLink = PaymentLinkModel;
        export const PaymentLink = PaymentLinkModel;
        export type PaymentLinkProtectionMode = PaymentLinkProtectionModeModel;
        export const PaymentLinkProtectionMode = PaymentLinkProtectionModeModel;
        export type PaymentLinkUpdate = PaymentLinkUpdateModel;
        export const PaymentLinkUpdate = PaymentLinkUpdateModel;
        export type PaymentMethod = PaymentMethodModel;
        export const PaymentMethod = PaymentMethodModel;
        export type PaymentMethodBrand = PaymentMethodBrandModel;
        export const PaymentMethodBrand = PaymentMethodBrandModel;
        export type PaymentMethodConfiguration = PaymentMethodConfigurationModel;
        export const PaymentMethodConfiguration = PaymentMethodConfigurationModel;
        export type PaymentPrimaryRiskTaker = PaymentPrimaryRiskTakerModel;
        export const PaymentPrimaryRiskTaker = PaymentPrimaryRiskTakerModel;
        export type PaymentProcessor = PaymentProcessorModel;
        export const PaymentProcessor = PaymentProcessorModel;
        export type PaymentProcessorConfiguration = PaymentProcessorConfigurationModel;
        export const PaymentProcessorConfiguration = PaymentProcessorConfigurationModel;
        export type Permission = PermissionModel;
        export const Permission = PermissionModel;
        export type PersistableCurrencyAmount = PersistableCurrencyAmountModel;
        export const PersistableCurrencyAmount = PersistableCurrencyAmountModel;
        export type PersistableCurrencyAmountUpdate = PersistableCurrencyAmountUpdateModel;
        export const PersistableCurrencyAmountUpdate = PersistableCurrencyAmountUpdateModel;
        export type ProductFeeType = ProductFeeTypeModel;
        export const ProductFeeType = ProductFeeTypeModel;
        export type ProductMeteredFee = ProductMeteredFeeModel;
        export const ProductMeteredFee = ProductMeteredFeeModel;
        export type ProductMeteredFeeUpdate = ProductMeteredFeeUpdateModel;
        export const ProductMeteredFeeUpdate = ProductMeteredFeeUpdateModel;
        export type ProductMeteredTierFee = ProductMeteredTierFeeModel;
        export const ProductMeteredTierFee = ProductMeteredTierFeeModel;
        export type ProductMeteredTierFeeUpdate = ProductMeteredTierFeeUpdateModel;
        export const ProductMeteredTierFeeUpdate = ProductMeteredTierFeeUpdateModel;
        export type ProductMeteredTierPricing = ProductMeteredTierPricingModel;
        export const ProductMeteredTierPricing = ProductMeteredTierPricingModel;
        export type ProductPeriodFee = ProductPeriodFeeModel;
        export const ProductPeriodFee = ProductPeriodFeeModel;
        export type ProductPeriodFeeUpdate = ProductPeriodFeeUpdateModel;
        export const ProductPeriodFeeUpdate = ProductPeriodFeeUpdateModel;
        export type ProductSetupFee = ProductSetupFeeModel;
        export const ProductSetupFee = ProductSetupFeeModel;
        export type ProductSetupFeeUpdate = ProductSetupFeeUpdateModel;
        export const ProductSetupFeeUpdate = ProductSetupFeeUpdateModel;
        export type Refund = RefundModel;
        export const Refund = RefundModel;
        export type RefundComment = RefundCommentModel;
        export const RefundComment = RefundCommentModel;
        export type RefundCreate = RefundCreateModel;
        export const RefundCreate = RefundCreateModel;
        export type RefundState = RefundStateModel;
        export const RefundState = RefundStateModel;
        export type RefundType = RefundTypeModel;
        export const RefundType = RefundTypeModel;
        export type RenderedDocument = RenderedDocumentModel;
        export const RenderedDocument = RenderedDocumentModel;
        export type ResourcePath = ResourcePathModel;
        export const ResourcePath = ResourcePathModel;
        export type ResourceState = ResourceStateModel;
        export const ResourceState = ResourceStateModel;
        export type RestAddressFormat = RestAddressFormatModel;
        export const RestAddressFormat = RestAddressFormatModel;
        export type RestAddressFormatField = RestAddressFormatFieldModel;
        export const RestAddressFormatField = RestAddressFormatFieldModel;
        export type RestCountry = RestCountryModel;
        export const RestCountry = RestCountryModel;
        export type RestCountryState = RestCountryStateModel;
        export const RestCountryState = RestCountryStateModel;
        export type RestCurrency = RestCurrencyModel;
        export const RestCurrency = RestCurrencyModel;
        export type RestLanguage = RestLanguageModel;
        export const RestLanguage = RestLanguageModel;
        export type Role = RoleModel;
        export const Role = RoleModel;
        export type Scope = ScopeModel;
        export const Scope = ScopeModel;
        export type ServerError = ServerErrorModel;
        export const ServerError = ServerErrorModel;
        export type Space = SpaceModel;
        export const Space = SpaceModel;
        export type SpaceAddress = SpaceAddressModel;
        export const SpaceAddress = SpaceAddressModel;
        export type SpaceAddressCreate = SpaceAddressCreateModel;
        export const SpaceAddressCreate = SpaceAddressCreateModel;
        export type SpaceReference = SpaceReferenceModel;
        export const SpaceReference = SpaceReferenceModel;
        export type SpaceReferenceState = SpaceReferenceStateModel;
        export const SpaceReferenceState = SpaceReferenceStateModel;
        export type SpaceView = SpaceViewModel;
        export const SpaceView = SpaceViewModel;
        export type StaticValue = StaticValueModel;
        export const StaticValue = StaticValueModel;
        export type Subscriber = SubscriberModel;
        export const Subscriber = SubscriberModel;
        export type SubscriberUpdate = SubscriberUpdateModel;
        export const SubscriberUpdate = SubscriberUpdateModel;
        export type Subscription = SubscriptionModel;
        export const Subscription = SubscriptionModel;
        export type SubscriptionAffiliate = SubscriptionAffiliateModel;
        export const SubscriptionAffiliate = SubscriptionAffiliateModel;
        export type SubscriptionAffiliateUpdate = SubscriptionAffiliateUpdateModel;
        export const SubscriptionAffiliateUpdate = SubscriptionAffiliateUpdateModel;
        export type SubscriptionChangeRequest = SubscriptionChangeRequestModel;
        export const SubscriptionChangeRequest = SubscriptionChangeRequestModel;
        export type SubscriptionCharge = SubscriptionChargeModel;
        export const SubscriptionCharge = SubscriptionChargeModel;
        export type SubscriptionChargeCreate = SubscriptionChargeCreateModel;
        export const SubscriptionChargeCreate = SubscriptionChargeCreateModel;
        export type SubscriptionChargeProcessingType = SubscriptionChargeProcessingTypeModel;
        export const SubscriptionChargeProcessingType = SubscriptionChargeProcessingTypeModel;
        export type SubscriptionChargeState = SubscriptionChargeStateModel;
        export const SubscriptionChargeState = SubscriptionChargeStateModel;
        export type SubscriptionChargeType = SubscriptionChargeTypeModel;
        export const SubscriptionChargeType = SubscriptionChargeTypeModel;
        export type SubscriptionCreateRequest = SubscriptionCreateRequestModel;
        export const SubscriptionCreateRequest = SubscriptionCreateRequestModel;
        export type SubscriptionLedgerEntry = SubscriptionLedgerEntryModel;
        export const SubscriptionLedgerEntry = SubscriptionLedgerEntryModel;
        export type SubscriptionLedgerEntryCreate = SubscriptionLedgerEntryCreateModel;
        export const SubscriptionLedgerEntryCreate = SubscriptionLedgerEntryCreateModel;
        export type SubscriptionLedgerEntryState = SubscriptionLedgerEntryStateModel;
        export const SubscriptionLedgerEntryState = SubscriptionLedgerEntryStateModel;
        export type SubscriptionMetric = SubscriptionMetricModel;
        export const SubscriptionMetric = SubscriptionMetricModel;
        export type SubscriptionMetricType = SubscriptionMetricTypeModel;
        export const SubscriptionMetricType = SubscriptionMetricTypeModel;
        export type SubscriptionMetricUpdate = SubscriptionMetricUpdateModel;
        export const SubscriptionMetricUpdate = SubscriptionMetricUpdateModel;
        export type SubscriptionMetricUsageReport = SubscriptionMetricUsageReportModel;
        export const SubscriptionMetricUsageReport = SubscriptionMetricUsageReportModel;
        export type SubscriptionMetricUsageReportCreate = SubscriptionMetricUsageReportCreateModel;
        export const SubscriptionMetricUsageReportCreate = SubscriptionMetricUsageReportCreateModel;
        export type SubscriptionPeriodBill = SubscriptionPeriodBillModel;
        export const SubscriptionPeriodBill = SubscriptionPeriodBillModel;
        export type SubscriptionPeriodBillState = SubscriptionPeriodBillStateModel;
        export const SubscriptionPeriodBillState = SubscriptionPeriodBillStateModel;
        export type SubscriptionProduct = SubscriptionProductModel;
        export const SubscriptionProduct = SubscriptionProductModel;
        export type SubscriptionProductComponent = SubscriptionProductComponentModel;
        export const SubscriptionProductComponent = SubscriptionProductComponentModel;
        export type SubscriptionProductComponentGroup = SubscriptionProductComponentGroupModel;
        export const SubscriptionProductComponentGroup = SubscriptionProductComponentGroupModel;
        export type SubscriptionProductComponentGroupUpdate = SubscriptionProductComponentGroupUpdateModel;
        export const SubscriptionProductComponentGroupUpdate = SubscriptionProductComponentGroupUpdateModel;
        export type SubscriptionProductComponentReference = SubscriptionProductComponentReferenceModel;
        export const SubscriptionProductComponentReference = SubscriptionProductComponentReferenceModel;
        export type SubscriptionProductComponentReferenceState = SubscriptionProductComponentReferenceStateModel;
        export const SubscriptionProductComponentReferenceState = SubscriptionProductComponentReferenceStateModel;
        export type SubscriptionProductComponentUpdate = SubscriptionProductComponentUpdateModel;
        export const SubscriptionProductComponentUpdate = SubscriptionProductComponentUpdateModel;
        export type SubscriptionProductRetirement = SubscriptionProductRetirementModel;
        export const SubscriptionProductRetirement = SubscriptionProductRetirementModel;
        export type SubscriptionProductRetirementCreate = SubscriptionProductRetirementCreateModel;
        export const SubscriptionProductRetirementCreate = SubscriptionProductRetirementCreateModel;
        export type SubscriptionProductState = SubscriptionProductStateModel;
        export const SubscriptionProductState = SubscriptionProductStateModel;
        export type SubscriptionProductVersion = SubscriptionProductVersionModel;
        export const SubscriptionProductVersion = SubscriptionProductVersionModel;
        export type SubscriptionProductVersionPending = SubscriptionProductVersionPendingModel;
        export const SubscriptionProductVersionPending = SubscriptionProductVersionPendingModel;
        export type SubscriptionProductVersionRetirement = SubscriptionProductVersionRetirementModel;
        export const SubscriptionProductVersionRetirement = SubscriptionProductVersionRetirementModel;
        export type SubscriptionProductVersionRetirementCreate = SubscriptionProductVersionRetirementCreateModel;
        export const SubscriptionProductVersionRetirementCreate = SubscriptionProductVersionRetirementCreateModel;
        export type SubscriptionProductVersionState = SubscriptionProductVersionStateModel;
        export const SubscriptionProductVersionState = SubscriptionProductVersionStateModel;
        export type SubscriptionState = SubscriptionStateModel;
        export const SubscriptionState = SubscriptionStateModel;
        export type SubscriptionSuspension = SubscriptionSuspensionModel;
        export const SubscriptionSuspension = SubscriptionSuspensionModel;
        export type SubscriptionSuspensionAction = SubscriptionSuspensionActionModel;
        export const SubscriptionSuspensionAction = SubscriptionSuspensionActionModel;
        export type SubscriptionSuspensionCreate = SubscriptionSuspensionCreateModel;
        export const SubscriptionSuspensionCreate = SubscriptionSuspensionCreateModel;
        export type SubscriptionSuspensionReason = SubscriptionSuspensionReasonModel;
        export const SubscriptionSuspensionReason = SubscriptionSuspensionReasonModel;
        export type SubscriptionSuspensionState = SubscriptionSuspensionStateModel;
        export const SubscriptionSuspensionState = SubscriptionSuspensionStateModel;
        export type SubscriptionUpdate = SubscriptionUpdateModel;
        export const SubscriptionUpdate = SubscriptionUpdateModel;
        export type SubscriptionVersion = SubscriptionVersionModel;
        export const SubscriptionVersion = SubscriptionVersionModel;
        export type SubscriptionVersionState = SubscriptionVersionStateModel;
        export const SubscriptionVersionState = SubscriptionVersionStateModel;
        export type Tax = TaxModel;
        export const Tax = TaxModel;
        export type TaxClass = TaxClassModel;
        export const TaxClass = TaxClassModel;
        export type TaxCreate = TaxCreateModel;
        export const TaxCreate = TaxCreateModel;
        export type TenantDatabase = TenantDatabaseModel;
        export const TenantDatabase = TenantDatabaseModel;
        export type Token = TokenModel;
        export const Token = TokenModel;
        export type TokenVersion = TokenVersionModel;
        export const TokenVersion = TokenVersionModel;
        export type TokenVersionState = TokenVersionStateModel;
        export const TokenVersionState = TokenVersionStateModel;
        export type TokenVersionType = TokenVersionTypeModel;
        export const TokenVersionType = TokenVersionTypeModel;
        export type TokenizationnMode = TokenizationnModeModel;
        export const TokenizationnMode = TokenizationnModeModel;
        export type Transaction = TransactionModel;
        export const Transaction = TransactionModel;
        export type TransactionAwareEntity = TransactionAwareEntityModel;
        export const TransactionAwareEntity = TransactionAwareEntityModel;
        export type TransactionComment = TransactionCommentModel;
        export const TransactionComment = TransactionCommentModel;
        export type TransactionCompletionMode = TransactionCompletionModeModel;
        export const TransactionCompletionMode = TransactionCompletionModeModel;
        export type TransactionCompletionRequest = TransactionCompletionRequestModel;
        export const TransactionCompletionRequest = TransactionCompletionRequestModel;
        export type TransactionCompletionState = TransactionCompletionStateModel;
        export const TransactionCompletionState = TransactionCompletionStateModel;
        export type TransactionEnvironmentSelectionStrategy = TransactionEnvironmentSelectionStrategyModel;
        export const TransactionEnvironmentSelectionStrategy = TransactionEnvironmentSelectionStrategyModel;
        export type TransactionGroup = TransactionGroupModel;
        export const TransactionGroup = TransactionGroupModel;
        export type TransactionGroupState = TransactionGroupStateModel;
        export const TransactionGroupState = TransactionGroupStateModel;
        export type TransactionInvoiceComment = TransactionInvoiceCommentModel;
        export const TransactionInvoiceComment = TransactionInvoiceCommentModel;
        export type TransactionInvoiceReplacement = TransactionInvoiceReplacementModel;
        export const TransactionInvoiceReplacement = TransactionInvoiceReplacementModel;
        export type TransactionInvoiceState = TransactionInvoiceStateModel;
        export const TransactionInvoiceState = TransactionInvoiceStateModel;
        export type TransactionLineItemUpdateRequest = TransactionLineItemUpdateRequestModel;
        export const TransactionLineItemUpdateRequest = TransactionLineItemUpdateRequestModel;
        export type TransactionState = TransactionStateModel;
        export const TransactionState = TransactionStateModel;
        export type TransactionUserInterfaceType = TransactionUserInterfaceTypeModel;
        export const TransactionUserInterfaceType = TransactionUserInterfaceTypeModel;
        export type TransactionVoidMode = TransactionVoidModeModel;
        export const TransactionVoidMode = TransactionVoidModeModel;
        export type TransactionVoidState = TransactionVoidStateModel;
        export const TransactionVoidState = TransactionVoidStateModel;
        export type TwoFactorAuthenticationType = TwoFactorAuthenticationTypeModel;
        export const TwoFactorAuthenticationType = TwoFactorAuthenticationTypeModel;
        export type UnencryptedCardData = UnencryptedCardDataModel;
        export const UnencryptedCardData = UnencryptedCardDataModel;
        export type UnencryptedCardDataCreate = UnencryptedCardDataCreateModel;
        export const UnencryptedCardDataCreate = UnencryptedCardDataCreateModel;
        export type User = UserModel;
        export const User = UserModel;
        export type UserAccountRole = UserAccountRoleModel;
        export const UserAccountRole = UserAccountRoleModel;
        export type UserSpaceRole = UserSpaceRoleModel;
        export const UserSpaceRole = UserSpaceRoleModel;
        export type UserType = UserTypeModel;
        export const UserType = UserTypeModel;
        export type WebhookIdentity = WebhookIdentityModel;
        export const WebhookIdentity = WebhookIdentityModel;
        export type WebhookListener = WebhookListenerModel;
        export const WebhookListener = WebhookListenerModel;
        export type WebhookListenerEntity = WebhookListenerEntityModel;
        export const WebhookListenerEntity = WebhookListenerEntityModel;
        export type WebhookUrl = WebhookUrlModel;
        export const WebhookUrl = WebhookUrlModel;
        export type AccountCreate = AccountCreateModel;
        export const AccountCreate = AccountCreateModel;
        export type AccountUpdate = AccountUpdateModel;
        export const AccountUpdate = AccountUpdateModel;
        export type ApplicationUser = ApplicationUserModel;
        export const ApplicationUser = ApplicationUserModel;
        export type ApplicationUserCreate = ApplicationUserCreateModel;
        export const ApplicationUserCreate = ApplicationUserCreateModel;
        export type ApplicationUserUpdate = ApplicationUserUpdateModel;
        export const ApplicationUserUpdate = ApplicationUserUpdateModel;
        export type Charge = ChargeModel;
        export const Charge = ChargeModel;
        export type ChargeAttempt = ChargeAttemptModel;
        export const ChargeAttempt = ChargeAttemptModel;
        export type ChargeFlowLevel = ChargeFlowLevelModel;
        export const ChargeFlowLevel = ChargeFlowLevelModel;
        export type ConnectorInvocation = ConnectorInvocationModel;
        export const ConnectorInvocation = ConnectorInvocationModel;
        export type DebtCollectionCaseCreate = DebtCollectionCaseCreateModel;
        export const DebtCollectionCaseCreate = DebtCollectionCaseCreateModel;
        export type DebtCollectionCaseUpdate = DebtCollectionCaseUpdateModel;
        export const DebtCollectionCaseUpdate = DebtCollectionCaseUpdateModel;
        export type DeliveryIndication = DeliveryIndicationModel;
        export const DeliveryIndication = DeliveryIndicationModel;
        export type HumanUserCreate = HumanUserCreateModel;
        export const HumanUserCreate = HumanUserCreateModel;
        export type HumanUserUpdate = HumanUserUpdateModel;
        export const HumanUserUpdate = HumanUserUpdateModel;
        export type InstallmentPaymentSlice = InstallmentPaymentSliceModel;
        export const InstallmentPaymentSlice = InstallmentPaymentSliceModel;
        export type PaymentLinkActive = PaymentLinkActiveModel;
        export const PaymentLinkActive = PaymentLinkActiveModel;
        export type PaymentLinkCreate = PaymentLinkCreateModel;
        export const PaymentLinkCreate = PaymentLinkCreateModel;
        export type RefundCommentActive = RefundCommentActiveModel;
        export const RefundCommentActive = RefundCommentActiveModel;
        export type RefundCommentCreate = RefundCommentCreateModel;
        export const RefundCommentCreate = RefundCommentCreateModel;
        export type SpaceCreate = SpaceCreateModel;
        export const SpaceCreate = SpaceCreateModel;
        export type SpaceUpdate = SpaceUpdateModel;
        export const SpaceUpdate = SpaceUpdateModel;
        export type SubscriberActive = SubscriberActiveModel;
        export const SubscriberActive = SubscriberActiveModel;
        export type SubscriberCreate = SubscriberCreateModel;
        export const SubscriberCreate = SubscriberCreateModel;
        export type SubscriptionAffiliateCreate = SubscriptionAffiliateCreateModel;
        export const SubscriptionAffiliateCreate = SubscriptionAffiliateCreateModel;
        export type SubscriptionAffiliateDeleted = SubscriptionAffiliateDeletedModel;
        export const SubscriptionAffiliateDeleted = SubscriptionAffiliateDeletedModel;
        export type SubscriptionAffiliateInactive = SubscriptionAffiliateInactiveModel;
        export const SubscriptionAffiliateInactive = SubscriptionAffiliateInactiveModel;
        export type SubscriptionMetricActive = SubscriptionMetricActiveModel;
        export const SubscriptionMetricActive = SubscriptionMetricActiveModel;
        export type SubscriptionMetricCreate = SubscriptionMetricCreateModel;
        export const SubscriptionMetricCreate = SubscriptionMetricCreateModel;
        export type SubscriptionPending = SubscriptionPendingModel;
        export const SubscriptionPending = SubscriptionPendingModel;
        export type SubscriptionProductActive = SubscriptionProductActiveModel;
        export const SubscriptionProductActive = SubscriptionProductActiveModel;
        export type SubscriptionProductCreate = SubscriptionProductCreateModel;
        export const SubscriptionProductCreate = SubscriptionProductCreateModel;
        export type SubscriptionSuspensionRunning = SubscriptionSuspensionRunningModel;
        export const SubscriptionSuspensionRunning = SubscriptionSuspensionRunningModel;
        export type TokenCreate = TokenCreateModel;
        export const TokenCreate = TokenCreateModel;
        export type TokenUpdate = TokenUpdateModel;
        export const TokenUpdate = TokenUpdateModel;
        export type TransactionCommentActive = TransactionCommentActiveModel;
        export const TransactionCommentActive = TransactionCommentActiveModel;
        export type TransactionCommentCreate = TransactionCommentCreateModel;
        export const TransactionCommentCreate = TransactionCommentCreateModel;
        export type TransactionCompletion = TransactionCompletionModel;
        export const TransactionCompletion = TransactionCompletionModel;
        export type TransactionCreate = TransactionCreateModel;
        export const TransactionCreate = TransactionCreateModel;
        export type TransactionInvoice = TransactionInvoiceModel;
        export const TransactionInvoice = TransactionInvoiceModel;
        export type TransactionInvoiceCommentActive = TransactionInvoiceCommentActiveModel;
        export const TransactionInvoiceCommentActive = TransactionInvoiceCommentActiveModel;
        export type TransactionInvoiceCommentCreate = TransactionInvoiceCommentCreateModel;
        export const TransactionInvoiceCommentCreate = TransactionInvoiceCommentCreateModel;
        export type TransactionLineItemVersion = TransactionLineItemVersionModel;
        export const TransactionLineItemVersion = TransactionLineItemVersionModel;
        export type TransactionPending = TransactionPendingModel;
        export const TransactionPending = TransactionPendingModel;
        export type TransactionVoid = TransactionVoidModel;
        export const TransactionVoid = TransactionVoidModel;
        export type WebhookListenerCreate = WebhookListenerCreateModel;
        export const WebhookListenerCreate = WebhookListenerCreateModel;
        export type WebhookListenerUpdate = WebhookListenerUpdateModel;
        export const WebhookListenerUpdate = WebhookListenerUpdateModel;
        export type WebhookUrlCreate = WebhookUrlCreateModel;
        export const WebhookUrlCreate = WebhookUrlCreateModel;
        export type WebhookUrlUpdate = WebhookUrlUpdateModel;
        export const WebhookUrlUpdate = WebhookUrlUpdateModel;
        export type ApplicationUserCreateWithMacKey = ApplicationUserCreateWithMacKeyModel;
        export const ApplicationUserCreateWithMacKey = ApplicationUserCreateWithMacKeyModel;
        export type SubscriptionAffiliateDeleting = SubscriptionAffiliateDeletingModel;
        export const SubscriptionAffiliateDeleting = SubscriptionAffiliateDeletingModel;
        
    }
    export namespace api {
        export type AccountService = AccountServiceApi;
        export const AccountService = AccountServiceApi;
        export type ApplicationUserService = ApplicationUserServiceApi;
        export const ApplicationUserService = ApplicationUserServiceApi;
        export type CardProcessingService = CardProcessingServiceApi;
        export const CardProcessingService = CardProcessingServiceApi;
        export type ChargeAttemptService = ChargeAttemptServiceApi;
        export const ChargeAttemptService = ChargeAttemptServiceApi;
        export type ChargeFlowLevelService = ChargeFlowLevelServiceApi;
        export const ChargeFlowLevelService = ChargeFlowLevelServiceApi;
        export type ChargeFlowService = ChargeFlowServiceApi;
        export const ChargeFlowService = ChargeFlowServiceApi;
        export type ConditionTypeService = ConditionTypeServiceApi;
        export const ConditionTypeService = ConditionTypeServiceApi;
        export type CountryService = CountryServiceApi;
        export const CountryService = CountryServiceApi;
        export type CountryStateService = CountryStateServiceApi;
        export const CountryStateService = CountryStateServiceApi;
        export type CurrencyService = CurrencyServiceApi;
        export const CurrencyService = CurrencyServiceApi;
        export type DebtCollectionCaseService = DebtCollectionCaseServiceApi;
        export const DebtCollectionCaseService = DebtCollectionCaseServiceApi;
        export type DebtCollectorConfigurationService = DebtCollectorConfigurationServiceApi;
        export const DebtCollectorConfigurationService = DebtCollectorConfigurationServiceApi;
        export type DebtCollectorService = DebtCollectorServiceApi;
        export const DebtCollectorService = DebtCollectorServiceApi;
        export type DeliveryIndicationService = DeliveryIndicationServiceApi;
        export const DeliveryIndicationService = DeliveryIndicationServiceApi;
        export type DocumentTemplateService = DocumentTemplateServiceApi;
        export const DocumentTemplateService = DocumentTemplateServiceApi;
        export type DocumentTemplateTypeService = DocumentTemplateTypeServiceApi;
        export const DocumentTemplateTypeService = DocumentTemplateTypeServiceApi;
        export type HumanUserService = HumanUserServiceApi;
        export const HumanUserService = HumanUserServiceApi;
        export type InstallmentPaymentService = InstallmentPaymentServiceApi;
        export const InstallmentPaymentService = InstallmentPaymentServiceApi;
        export type InstallmentPaymentSliceService = InstallmentPaymentSliceServiceApi;
        export const InstallmentPaymentSliceService = InstallmentPaymentSliceServiceApi;
        export type InstallmentPlanCalculationService = InstallmentPlanCalculationServiceApi;
        export const InstallmentPlanCalculationService = InstallmentPlanCalculationServiceApi;
        export type InstallmentPlanConfigurationService = InstallmentPlanConfigurationServiceApi;
        export const InstallmentPlanConfigurationService = InstallmentPlanConfigurationServiceApi;
        export type InstallmentPlanSliceConfigurationService = InstallmentPlanSliceConfigurationServiceApi;
        export const InstallmentPlanSliceConfigurationService = InstallmentPlanSliceConfigurationServiceApi;
        export type LabelDescriptionGroupService = LabelDescriptionGroupServiceApi;
        export const LabelDescriptionGroupService = LabelDescriptionGroupServiceApi;
        export type LabelDescriptionService = LabelDescriptionServiceApi;
        export const LabelDescriptionService = LabelDescriptionServiceApi;
        export type LanguageService = LanguageServiceApi;
        export const LanguageService = LanguageServiceApi;
        export type LegalOrganizationFormService = LegalOrganizationFormServiceApi;
        export const LegalOrganizationFormService = LegalOrganizationFormServiceApi;
        export type ManualTaskService = ManualTaskServiceApi;
        export const ManualTaskService = ManualTaskServiceApi;
        export type MerticUsageService = MerticUsageServiceApi;
        export const MerticUsageService = MerticUsageServiceApi;
        export type PaymentConnectorConfigurationService = PaymentConnectorConfigurationServiceApi;
        export const PaymentConnectorConfigurationService = PaymentConnectorConfigurationServiceApi;
        export type PaymentConnectorService = PaymentConnectorServiceApi;
        export const PaymentConnectorService = PaymentConnectorServiceApi;
        export type PaymentLinkService = PaymentLinkServiceApi;
        export const PaymentLinkService = PaymentLinkServiceApi;
        export type PaymentMethodConfigurationService = PaymentMethodConfigurationServiceApi;
        export const PaymentMethodConfigurationService = PaymentMethodConfigurationServiceApi;
        export type PaymentMethodService = PaymentMethodServiceApi;
        export const PaymentMethodService = PaymentMethodServiceApi;
        export type PaymentProcessorConfigurationService = PaymentProcessorConfigurationServiceApi;
        export const PaymentProcessorConfigurationService = PaymentProcessorConfigurationServiceApi;
        export type PaymentProcessorService = PaymentProcessorServiceApi;
        export const PaymentProcessorService = PaymentProcessorServiceApi;
        export type PermissionService = PermissionServiceApi;
        export const PermissionService = PermissionServiceApi;
        export type RefundCommentService = RefundCommentServiceApi;
        export const RefundCommentService = RefundCommentServiceApi;
        export type RefundService = RefundServiceApi;
        export const RefundService = RefundServiceApi;
        export type SpaceService = SpaceServiceApi;
        export const SpaceService = SpaceServiceApi;
        export type StaticValueService = StaticValueServiceApi;
        export const StaticValueService = StaticValueServiceApi;
        export type SubscriberService = SubscriberServiceApi;
        export const SubscriberService = SubscriberServiceApi;
        export type SubscriptionAffiliateService = SubscriptionAffiliateServiceApi;
        export const SubscriptionAffiliateService = SubscriptionAffiliateServiceApi;
        export type SubscriptionChargeService = SubscriptionChargeServiceApi;
        export const SubscriptionChargeService = SubscriptionChargeServiceApi;
        export type SubscriptionLedgerEntryService = SubscriptionLedgerEntryServiceApi;
        export const SubscriptionLedgerEntryService = SubscriptionLedgerEntryServiceApi;
        export type SubscriptionMetricService = SubscriptionMetricServiceApi;
        export const SubscriptionMetricService = SubscriptionMetricServiceApi;
        export type SubscriptionMetricUsageService = SubscriptionMetricUsageServiceApi;
        export const SubscriptionMetricUsageService = SubscriptionMetricUsageServiceApi;
        export type SubscriptionPeriodBillService = SubscriptionPeriodBillServiceApi;
        export const SubscriptionPeriodBillService = SubscriptionPeriodBillServiceApi;
        export type SubscriptionProductComponentGroupService = SubscriptionProductComponentGroupServiceApi;
        export const SubscriptionProductComponentGroupService = SubscriptionProductComponentGroupServiceApi;
        export type SubscriptionProductComponentService = SubscriptionProductComponentServiceApi;
        export const SubscriptionProductComponentService = SubscriptionProductComponentServiceApi;
        export type SubscriptionProductFeeTierService = SubscriptionProductFeeTierServiceApi;
        export const SubscriptionProductFeeTierService = SubscriptionProductFeeTierServiceApi;
        export type SubscriptionProductMeteredFeeService = SubscriptionProductMeteredFeeServiceApi;
        export const SubscriptionProductMeteredFeeService = SubscriptionProductMeteredFeeServiceApi;
        export type SubscriptionProductPeriodFeeService = SubscriptionProductPeriodFeeServiceApi;
        export const SubscriptionProductPeriodFeeService = SubscriptionProductPeriodFeeServiceApi;
        export type SubscriptionProductRetirementService = SubscriptionProductRetirementServiceApi;
        export const SubscriptionProductRetirementService = SubscriptionProductRetirementServiceApi;
        export type SubscriptionProductService = SubscriptionProductServiceApi;
        export const SubscriptionProductService = SubscriptionProductServiceApi;
        export type SubscriptionProductSetupFeeService = SubscriptionProductSetupFeeServiceApi;
        export const SubscriptionProductSetupFeeService = SubscriptionProductSetupFeeServiceApi;
        export type SubscriptionProductVersionRetirementService = SubscriptionProductVersionRetirementServiceApi;
        export const SubscriptionProductVersionRetirementService = SubscriptionProductVersionRetirementServiceApi;
        export type SubscriptionProductVersionService = SubscriptionProductVersionServiceApi;
        export const SubscriptionProductVersionService = SubscriptionProductVersionServiceApi;
        export type SubscriptionService = SubscriptionServiceApi;
        export const SubscriptionService = SubscriptionServiceApi;
        export type SubscriptionSuspensionService = SubscriptionSuspensionServiceApi;
        export const SubscriptionSuspensionService = SubscriptionSuspensionServiceApi;
        export type SubscriptionVersionService = SubscriptionVersionServiceApi;
        export const SubscriptionVersionService = SubscriptionVersionServiceApi;
        export type TokenService = TokenServiceApi;
        export const TokenService = TokenServiceApi;
        export type TokenVersionService = TokenVersionServiceApi;
        export const TokenVersionService = TokenVersionServiceApi;
        export type TransactionCommentService = TransactionCommentServiceApi;
        export const TransactionCommentService = TransactionCommentServiceApi;
        export type TransactionCompletionService = TransactionCompletionServiceApi;
        export const TransactionCompletionService = TransactionCompletionServiceApi;
        export type TransactionInvoiceCommentService = TransactionInvoiceCommentServiceApi;
        export const TransactionInvoiceCommentService = TransactionInvoiceCommentServiceApi;
        export type TransactionInvoiceService = TransactionInvoiceServiceApi;
        export const TransactionInvoiceService = TransactionInvoiceServiceApi;
        export type TransactionService = TransactionServiceApi;
        export const TransactionService = TransactionServiceApi;
        export type TransactionVoidService = TransactionVoidServiceApi;
        export const TransactionVoidService = TransactionVoidServiceApi;
        export type UserAccountRoleService = UserAccountRoleServiceApi;
        export const UserAccountRoleService = UserAccountRoleServiceApi;
        export type UserSpaceRoleService = UserSpaceRoleServiceApi;
        export const UserSpaceRoleService = UserSpaceRoleServiceApi;
        export type WebhookListenerService = WebhookListenerServiceApi;
        export const WebhookListenerService = WebhookListenerServiceApi;
        export type WebhookUrlService = WebhookUrlServiceApi;
        export const WebhookUrlService = WebhookUrlServiceApi;
        
    }
}